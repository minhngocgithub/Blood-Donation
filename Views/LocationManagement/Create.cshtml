@model Blood_Donation_Website.Models.DTOs.LocationDto
@{
    ViewData["Title"] = "Thêm địa điểm mới";
    ViewData["ShowBreadcrumb"] = true;
    ViewData["BreadcrumbItems"] = "<li class='breadcrumb-item'><a asp-action='Index'>Quản lý địa điểm</a></li><li class='breadcrumb-item active'>Thêm mới</li>";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-map-marker-alt me-2"></i>Thêm địa điểm hiến máu mới
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div class="mb-3">
                            <label asp-for="LocationName" class="form-label">Tên địa điểm <span class="text-danger">*</span></label>
                            <input asp-for="LocationName" class="form-control" placeholder="Nhập tên địa điểm">
                            <span asp-validation-for="LocationName" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Địa chỉ <span class="text-danger">*</span></label>
                            <div class="row g-2">
                                <div class="col-md-4">
                                    <select id="province" class="form-control" name="Province">
                                        <option value="">Chọn tỉnh/thành phố</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <select id="district" class="form-control" name="District" disabled>
                                        <option value="">Chọn quận/huyện</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <select id="ward" class="form-control" name="Ward" disabled>
                                        <option value="">Chọn phường/xã</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mt-2">
                                <input type="text" id="addressDetail" name="AddressDetail" class="form-control" placeholder="Số nhà, tên đường">
                            </div>
                            <input type="hidden" asp-for="Address" id="fullAddress" />
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="ContactPhone" class="form-label">Số điện thoại liên hệ</label>
                                <input asp-for="ContactPhone" class="form-control" placeholder="0123456789">
                                <span asp-validation-for="ContactPhone" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label asp-for="Capacity" class="form-label">Sức chứa <span class="text-danger">*</span></label>
                                <input asp-for="Capacity" type="number" class="form-control" placeholder="50">
                                <span asp-validation-for="Capacity" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <input asp-for="IsActive" class="form-check-input" type="checkbox" checked>
                                <label asp-for="IsActive" class="form-check-label">
                                    Kích hoạt địa điểm
                                </label>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-2"></i>Quay lại
                            </a>
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-save me-2"></i>Thêm địa điểm
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const provinceSelect = document.getElementById('province');
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');
            const addressDetailInput = document.getElementById('addressDetail');
            const fullAddressInput = document.getElementById('fullAddress');

            function decodeHTMLEntities(text) {
                if (!text) return '';
                const textArea = document.createElement('textarea');
                textArea.innerHTML = text;
                return textArea.value;
            }

            async function loadProvinces() {
                try {
                    const response = await fetch('https://provinces.open-api.vn/api/p/');
                    const provinces = await response.json();
                    provinces.forEach(province => {
                        const option = new Option(province.name, province.name);
                        provinceSelect.add(option);
                    });
                } catch (error) {
                    console.error('Error loading provinces:', error);
                }
            }

            async function loadDistricts(provinceName) {
                try {
                    const response = await fetch(`https://provinces.open-api.vn/api/p/search/?q=${encodeURIComponent(provinceName)}`);
                    const provinces = await response.json();
                    if (provinces.length > 0) {
                        const province = provinces[0];
                        const districtsResponse = await fetch(`https://provinces.open-api.vn/api/p/${province.code}?depth=2`);
                        const provinceData = await districtsResponse.json();
                        provinceData.districts.forEach(district => {
                            const option = new Option(district.name, district.name);
                            districtSelect.add(option);
                        });
                    }
                } catch (error) {
                    console.error('Error loading districts:', error);
                }
            }

            async function loadWards(districtName) {
                try {
                    const response = await fetch(`https://provinces.open-api.vn/api/d/search/?q=${encodeURIComponent(districtName)}`);
                    const districts = await response.json();
                    if (districts.length > 0) {
                        const district = districts[0];
                        const wardsResponse = await fetch(`https://provinces.open-api.vn/api/d/${district.code}?depth=2`);
                        const districtData = await wardsResponse.json();
                        districtData.wards.forEach(ward => {
                            const option = new Option(ward.name, ward.name);
                            wardSelect.add(option);
                        });
                    }
                } catch (error) {
                    console.error('Error loading wards:', error);
                }
            }

            function updateFullAddress() {
                const province = provinceSelect.options[provinceSelect.selectedIndex]?.text || '';
                const district = districtSelect.options[districtSelect.selectedIndex]?.text || '';
                const ward = wardSelect.options[wardSelect.selectedIndex]?.text || '';
                const addressDetail = addressDetailInput.value.trim();
                const parts = [addressDetail, ward, district, province].filter(part => part);
                const fullAddress = parts.join(', ');
                if (fullAddressInput) {
                    fullAddressInput.value = fullAddress;
                }
            }

            provinceSelect.addEventListener('change', async function() {
                districtSelect.innerHTML = '<option value="">Chọn quận/huyện</option>';
                wardSelect.innerHTML = '<option value="">Chọn phường/xã</option>';
                districtSelect.disabled = !this.value;
                wardSelect.disabled = true;
                if (this.value) {
                    await loadDistricts(this.value);
                }
                updateFullAddress();
            });

            districtSelect.addEventListener('change', async function() {
                wardSelect.innerHTML = '<option value="">Chọn phường/xã</option>';
                wardSelect.disabled = !this.value;
                if (this.value) {
                    await loadWards(this.value);
                }
                updateFullAddress();
            });

            wardSelect.addEventListener('change', function() {
                updateFullAddress();
            });

            addressDetailInput.addEventListener('input', function() {
                updateFullAddress();
            });

            loadProvinces();
        });
    </script>
} 