@model IEnumerable<Blood_Donation_Website.Models.DTOs.LocationDto>
@{
    ViewData["Title"] = "Quản lý địa điểm hiến máu";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-danger fw-bold">
                    <i class="fas fa-map-marker-alt me-2"></i>Quản lý địa điểm hiến máu
                </h2>
                <a asp-action="Create" class="btn btn-danger">
                    <i class="fas fa-plus me-2"></i>Thêm địa điểm mới
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow-sm">
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-map-marker-slash fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có địa điểm nào</h5>
                            <p class="text-muted">Bắt đầu thêm địa điểm hiến máu đầu tiên.</p>
                            <a asp-action="Create" class="btn btn-danger">
                                <i class="fas fa-plus me-2"></i>Thêm địa điểm
                            </a>
                        </div>
                    }
                    else
                    {
                        <!-- Sorting Controls -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <label class="form-label me-2 mb-0 fw-bold">
                                        <i class="fas fa-sort me-1"></i>Sắp xếp theo:
                                    </label>
                                    <select id="sortBy" class="form-select form-select-sm" style="width: auto;">
                                        <option value="name-asc">Tên địa điểm (A-Z)</option>
                                        <option value="name-desc">Tên địa điểm (Z-A)</option>
                                        <option value="status-active">Trạng thái (Hoạt động)</option>
                                        <option value="status-inactive">Trạng thái (Tạm ngưng)</option>
                                        <option value="date-newest">Ngày tạo (Mới nhất)</option>
                                        <option value="date-oldest">Ngày tạo (Cũ nhất)</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 text-end">
                                <div class="d-flex align-items-center justify-content-end">
                                    <label class="form-label me-2 mb-0 fw-bold">
                                        <i class="fas fa-filter me-1"></i>Lọc trạng thái:
                                    </label>
                                    <select id="statusFilter" class="form-select form-select-sm" style="width: auto;">
                                        <option value="all">Tất cả</option>
                                        <option value="active">Hoạt động</option>
                                        <option value="inactive">Tạm ngưng</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-danger">
                                    <tr>
                                        <th>Tên địa điểm</th>
                                        <th>Địa chỉ</th>
                                        <th>Số điện thoại</th>
                                        <th>Sức chứa</th>
                                        <th>Trạng thái</th>
                                        <th>Ngày tạo</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var location in Model)
                                    {
                                        <tr class="location-row" 
                                            data-name="@location.LocationName.ToLower()" 
                                            data-status="@(location.IsActive ? "active" : "inactive")"
                                            data-date="@location.CreatedDate.ToString("yyyy-MM-dd")">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-info rounded me-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                        <i class="fas fa-map-marker-alt text-white" style="font-size: 16px;"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@location.LocationName</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="text-muted">@location.Address</span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(location.ContactPhone))
                                                {
                                                    <a href="tel:@location.ContactPhone" class="text-decoration-none">
                                                        <i class="fas fa-phone me-1"></i>@location.ContactPhone
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Chưa có</span>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge bg-success">@location.Capacity người</span>
                                            </td>
                                            <td>
                                                @if (location.IsActive)
                                                {
                                                    <span class="badge bg-success">Hoạt động</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Tạm ngưng</span>
                                                }
                                            </td>
                                            <td>
                                                <small class="text-muted">@location.CreatedDate.ToString("dd/MM/yyyy")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Edit" asp-route-id="@location.LocationId" class="btn btn-sm btn-outline-primary" title="Chỉnh sửa">
                                                        <i class="fas fa-edit" style="font-size: 16px;"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-warning" title="Đổi trạng thái" 
                                                            onclick="toggleStatus(@location.LocationId, @location.IsActive.ToString().ToLower())">
                                                        <i class="fas @(location.IsActive ? "fa-toggle-on" : "fa-toggle-off")" style="font-size: 16px;"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger" title="Xóa" 
                                                            onclick="confirmDelete(@location.LocationId, '@location.LocationName')">
                                                        <i class="fas fa-trash" style="font-size: 16px;"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/js/sweetalert-helper.js"></script>
    <script>
        function confirmDelete(locationId, locationName) {
            Swal.fire({
                title: 'Xác nhận xóa',
                html: `Bạn có chắc chắn muốn xóa địa điểm <strong>"${locationName}"</strong>?<br><br><small class="text-danger">Hành động này không thể hoàn tác.</small>`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = `/admin/locations/delete/${locationId}`;
                    
                    const token = document.createElement('input');
                    token.type = 'hidden';
                    token.name = '__RequestVerificationToken';
                    token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    
                    form.appendChild(token);
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        function toggleStatus(locationId, isActive) {
            const locationName = event.target.closest('tr').querySelector('h6').textContent;
            const statusAction = isActive === 'true' ? 'tạm ngưng' : 'kích hoạt';
            const statusText = isActive === 'true' ? 'Tạm ngưng' : 'Kích hoạt';
            
            Swal.fire({
                title: 'Xác nhận thay đổi trạng thái',
                html: `Bạn có chắc chắn muốn <strong>${statusAction}</strong> địa điểm <strong>"${locationName}"</strong>?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#ffc107',
                cancelButtonColor: '#6c757d',
                confirmButtonText: statusText,
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.createElement('form');
                    form.method = 'POST';
                    form.action = `/admin/locations/toggle-status/${locationId}`;
                    
                    const token = document.createElement('input');
                    token.type = 'hidden';
                    token.name = '__RequestVerificationToken';
                    token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                    
                    form.appendChild(token);
                    document.body.appendChild(form);
                    form.submit();
                }
            });
        }

        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                showSuccess("@TempData["SuccessMessage"]");
            </text>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
                showError("@TempData["ErrorMessage"]");
            </text>
        }

        // Sorting and Filtering functionality
        document.addEventListener('DOMContentLoaded', function() {
            const sortBySelect = document.getElementById('sortBy');
            const statusFilterSelect = document.getElementById('statusFilter');
            const locationRows = document.querySelectorAll('.location-row');
            const tbody = document.querySelector('tbody');

            function applySortAndFilter() {
                const sortBy = sortBySelect.value;
                const statusFilter = statusFilterSelect.value;
                
                // Convert NodeList to Array for sorting
                let rows = Array.from(locationRows);
                
                // Filter by status
                if (statusFilter !== 'all') {
                    rows = rows.filter(row => row.dataset.status === statusFilter);
                }
                
                // Sort rows
                rows.sort((a, b) => {
                    switch (sortBy) {
                        case 'name-asc':
                            return a.dataset.name.localeCompare(b.dataset.name);
                        case 'name-desc':
                            return b.dataset.name.localeCompare(a.dataset.name);
                        case 'status-active':
                            return (b.dataset.status === 'active') - (a.dataset.status === 'active');
                        case 'status-inactive':
                            return (a.dataset.status === 'active') - (b.dataset.status === 'active');
                        case 'date-newest':
                            return new Date(b.dataset.date) - new Date(a.dataset.date);
                        case 'date-oldest':
                            return new Date(a.dataset.date) - new Date(b.dataset.date);
                        default:
                            return 0;
                    }
                });
                
                // Reorder rows in DOM
                rows.forEach(row => tbody.appendChild(row));
                
                // Show/hide rows based on filter
                locationRows.forEach(row => {
                    if (statusFilter === 'all' || row.dataset.status === statusFilter) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            // Event listeners
            sortBySelect.addEventListener('change', applySortAndFilter);
            statusFilterSelect.addEventListener('change', applySortAndFilter);
        });
    </script>
} 