@model IEnumerable<Blood_Donation_Website.Models.DTOs.ContactMessageDto>
@{
    ViewData["Title"] = "Quản lý tin nhắn liên hệ";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-danger fw-bold">
                    <i class="fas fa-envelope me-2"></i>Quản lý tin nhắn liên hệ
                </h2>
                <div>
                    <a asp-action="UnreadMessages" class="btn btn-warning me-2">
                        <i class="fas fa-envelope-open me-2"></i>Chưa đọc
                    </a>
                    <a asp-action="Statistics" class="btn btn-info">
                        <i class="fas fa-chart-bar me-2"></i>Thống kê
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow-sm">
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có tin nhắn nào</h5>
                            <p class="text-muted">Hộp thư liên hệ trống.</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-danger">
                                    <tr>
                                        <th>Người gửi</th>
                                        <th>Tiêu đề</th>
                                        <th>Ngày gửi</th>
                                        <th>Trạng thái</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var message in Model)
                                    {
                                        <tr class="@(message.Status == "New" ? "table-warning" : "")">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-primary rounded me-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                        <i class="fas fa-user text-white"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@message.FullName</h6>
                                                        <small class="text-muted">@message.Email</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <h6 class="mb-0 @(message.Status == "New" ? "fw-bold" : "")">@message.Subject</h6>
                                                    <small class="text-muted">@message.Message?.Substring(0, Math.Min(50, message.Message.Length))...</small>
                                                </div>
                                            </td>
                                            <td>
                                                <small class="text-muted">@message.CreatedDate.ToString("dd/MM/yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                @{
                                                    var statusClass = message.Status switch
                                                    {
                                                        "New" => "bg-primary",
                                                        "InProgress" => "bg-warning",
                                                        "Resolved" => "bg-success",
                                                        "Closed" => "bg-secondary",
                                                        _ => "bg-secondary"
                                                    };
                                                    
                                                    var statusText = message.Status switch
                                                    {
                                                        "New" => "Mới",
                                                        "InProgress" => "Đang xử lý",
                                                        "Resolved" => "Đã giải quyết",
                                                        "Closed" => "Đã đóng",
                                                        _ => message.Status
                                                    };
                                                }
                                                <span class="badge @statusClass">@statusText</span>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@message.MessageId" class="btn btn-sm btn-outline-info" title="Chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Reply" asp-route-id="@message.MessageId" class="btn btn-sm btn-outline-primary" title="Trả lời">
                                                        <i class="fas fa-reply"></i>
                                                    </a>
                                                    @if (message.Status == "New")
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-success" title="Đánh dấu đã đọc" 
                                                                onclick="markAsRead(@message.MessageId)">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-warning" title="Đánh dấu chưa đọc" 
                                                                onclick="markAsUnread(@message.MessageId)">
                                                            <i class="fas fa-envelope"></i>
                                                        </button>
                                                    }
                                                    <button type="button" class="btn btn-sm btn-outline-danger" title="Xóa" 
                                                            onclick="confirmDelete(@message.MessageId, '@message.Subject')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa tin nhắn "<span id="messageSubject"></span>"?</p>
                <p class="text-danger"><small>Hành động này không thể hoàn tác.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(messageId, messageSubject) {
            document.getElementById('messageSubject').textContent = messageSubject;
            document.getElementById('deleteForm').action = `/admin/contact-messages/delete/${messageId}`;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        function markAsRead(messageId) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/admin/contact-messages/mark-read/${messageId}`;
            
            const token = document.createElement('input');
            token.type = 'hidden';
            token.name = '__RequestVerificationToken';
            token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            form.appendChild(token);
            document.body.appendChild(form);
            form.submit();
        }

        function markAsUnread(messageId) {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/admin/contact-messages/mark-unread/${messageId}`;
            
            const token = document.createElement('input');
            token.type = 'hidden';
            token.name = '__RequestVerificationToken';
            token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            form.appendChild(token);
            document.body.appendChild(form);
            form.submit();
        }
    </script>
} 