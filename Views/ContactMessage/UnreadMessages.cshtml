@model IEnumerable<Blood_Donation_Website.Models.DTOs.ContactMessageDto>
@using Blood_Donation_Website.Utilities
@{
    ViewData["Title"] = "Tin nhắn chưa đọc";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-warning fw-bold">
                    <i class="fas fa-envelope-open me-2"></i>Tin nhắn chưa đọc
                </h2>
                <div>
                    <a asp-action="Index" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-arrow-left me-2"></i>Quay lại
                    </a>
                    <a asp-action="Statistics" class="btn btn-info">
                        <i class="fas fa-chart-bar me-2"></i>Thống kê
                    </a>
                </div>
            </div>

            <!-- SweetAlert notifications will be handled by _SweetAlertNotifications partial -->

            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Summary Section -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="alert alert-warning" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>@Model.Count() tin nhắn chưa đọc</strong> cần được xử lý
                            </div>
                        </div>
                        <div class="col-md-6 text-end">
                            <small class="text-muted">
                                Cập nhật lần cuối: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")
                            </small>
                        </div>
                    </div>

                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <h5 class="text-success">Tuyệt vời!</h5>
                            <p class="text-muted">Không có tin nhắn nào chưa đọc.</p>
                            <a asp-action="Index" class="btn btn-outline-primary">
                                <i class="fas fa-arrow-left me-2"></i>Quay lại danh sách chính
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-warning">
                                    <tr>
                                        <th>Người gửi</th>
                                        <th>Tiêu đề</th>
                                        <th>Ngày gửi</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var message in Model)
                                    {
                                        <tr class="table-warning">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-warning rounded me-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                        <i class="fas fa-user text-white"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0 fw-bold">@message.FullName</h6>
                                                        <small class="text-muted">@message.Email</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <h6 class="mb-0 fw-bold text-warning">@message.Subject</h6>
                                                    <small class="text-muted">@message.Message?.Substring(0, Math.Min(80, message.Message.Length))...</small>
                                                </div>
                                            </td>
                                            <td>
                                                <small class="text-muted">@message.CreatedDate.ToString("dd/MM/yyyy HH:mm")</small>
                                                <br>
                                                <small class="text-warning">
                                                    <i class="fas fa-clock me-1"></i>
                                                    @{
                                                        var timeAgo = DateTime.Now - message.CreatedDate;
                                                        if (timeAgo.TotalDays >= 1)
                                                        {
                                                            <span>@((int)timeAgo.TotalDays) ngày trước</span>
                                                        }
                                                        else if (timeAgo.TotalHours >= 1)
                                                        {
                                                            <span>@((int)timeAgo.TotalHours) giờ trước</span>
                                                        }
                                                        else
                                                        {
                                                            <span>@((int)timeAgo.TotalMinutes) phút trước</span>
                                                        }
                                                    }
                                                </small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@message.MessageId" class="btn btn-sm btn-outline-info" title="Chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Reply" asp-route-id="@message.MessageId" class="btn btn-sm btn-outline-primary" title="Trả lời">
                                                        <i class="fas fa-reply"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-success" title="Đánh dấu đã đọc" 
                                                            onclick="markAsRead(@message.MessageId)">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger" title="Xóa" 
                                                            onclick="confirmDelete(@message.MessageId, '@message.Subject')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Bulk Actions -->
                        <div class="mt-4 pt-3 border-top">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <button type="button" class="btn btn-outline-success me-2" onclick="markAllAsRead()">
                                        <i class="fas fa-check-double me-2"></i>Đánh dấu tất cả đã đọc
                                    </button>
                                    <button type="button" class="btn btn-outline-primary me-2" onclick="replyToAll()">
                                        <i class="fas fa-reply-all me-2"></i>Trả lời hàng loạt
                                    </button>
                                </div>
                                <div>
                                    <small class="text-muted">
                                        Hiển thị @Model.Count() tin nhắn chưa đọc
                                    </small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert will handle all confirmations -->

@section Scripts {
    <!-- SweetAlert Helper -->
    <script src="~/js/sweetalert-helper.js" asp-append-version="true"></script>
    
    <script>
        function confirmDelete(messageId, messageSubject) {
            showDeleteConfirm(`tin nhắn "${messageSubject}"`, 'Hành động này không thể hoàn tác.')
                .then((result) => {
                    if (result.isConfirmed) {
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = `/admin/contact-messages/delete/${messageId}`;
                        
                        const token = document.createElement('input');
                        token.type = 'hidden';
                        token.name = '__RequestVerificationToken';
                        token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                        
                        form.appendChild(token);
                        document.body.appendChild(form);
                        form.submit();
                    }
                });
        }

        function markAsRead(messageId) {
            showLoading('Đang xử lý...', 'Đánh dấu tin nhắn đã đọc');
            
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = `/admin/contact-messages/mark-read/${messageId}`;
            
            const token = document.createElement('input');
            token.type = 'hidden';
            token.name = '__RequestVerificationToken';
            token.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
            
            form.appendChild(token);
            document.body.appendChild(form);
            form.submit();
        }

        function markAllAsRead() {
            showConfirm(
                'Đánh dấu tất cả đã đọc',
                'Bạn có chắc chắn muốn đánh dấu tất cả tin nhắn chưa đọc là đã đọc?',
                'Có, đánh dấu tất cả',
                'Hủy bỏ',
                'question'
            ).then((result) => {
                if (result.isConfirmed) {
                    showInfo(
                        'Tính năng đang phát triển',
                        'Tính năng đánh dấu tất cả tin nhắn đã đọc sẽ được phát triển trong phiên bản tiếp theo.'
                    );
                }
            });
        }

        function replyToAll() {
            showConfirm(
                'Trả lời hàng loạt',
                'Bạn có chắc chắn muốn trả lời tất cả tin nhắn chưa đọc?',
                'Có, trả lời tất cả',
                'Hủy bỏ',
                'question'
            ).then((result) => {
                if (result.isConfirmed) {
                    showInfo(
                        'Tính năng đang phát triển',
                        'Tính năng trả lời hàng loạt sẽ được phát triển trong phiên bản tiếp theo.'
                    );
                }
            });
        }

        // Show loading when page loads if there are unread messages
        document.addEventListener('DOMContentLoaded', function() {
            const unreadCount = @Model.Count();
            if (unreadCount > 0) {
                showToast('info', `Có ${unreadCount} tin nhắn chưa đọc cần xử lý`, 3000);
            }
        });
    </script>
} 