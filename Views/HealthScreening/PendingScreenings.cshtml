@model IEnumerable<Blood_Donation_Website.Models.DTOs.DonationRegistrationDto>
@using Blood_Donation_Website.Utilities
@{
    ViewData["Title"] = "Chờ sàng lọc sức khỏe";
}

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-warning fw-bold">
                    <i class="fas fa-clock me-2"></i>Chờ sàng lọc sức khỏe
                </h2>
                <div>
                    <a asp-action="Index" class="btn btn-info me-2">
                        <i class="fas fa-list me-2"></i>Tất cả sàng lọc
                    </a>
                    <a href="/screening/update-blood-type" class="btn btn-primary">
                        <i class="fas fa-tint me-2"></i>Cập nhật nhóm máu
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow-sm">
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <h5 class="text-success">Không có đăng ký nào chờ sàng lọc</h5>
                            <p class="text-muted">Tất cả người hiến máu đã được sàng lọc sức khỏe hoặc chưa check-in.</p>
                        </div>
                    }
                    else
                    {
                        <!-- Sorting Controls -->
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center">
                                    <label class="form-label me-2 mb-0 fw-bold">
                                        <i class="fas fa-sort me-1"></i>Sắp xếp theo:
                                    </label>
                                    <select id="sortBy" class="form-select form-select-sm" style="width: auto;">
                                        <option value="name-asc">Tên người hiến máu (A-Z)</option>
                                        <option value="name-desc">Tên người hiến máu (Z-A)</option>
                                        <option value="event-asc">Sự kiện (A-Z)</option>
                                        <option value="event-desc">Sự kiện (Z-A)</option>
                                        <option value="checkin-newest">Thời gian check-in (Mới nhất)</option>
                                        <option value="checkin-oldest">Thời gian check-in (Cũ nhất)</option>
                                        <option value="registration-newest">Ngày đăng ký (Mới nhất)</option>
                                        <option value="registration-oldest">Ngày đăng ký (Cũ nhất)</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 text-end">
                                <div class="d-flex align-items-center justify-content-end">
                                    <span class="badge bg-warning fs-6">
                                        <i class="fas fa-users me-1"></i>
                                        @Model.Count() người chờ sàng lọc
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-warning">
                                    <tr>
                                        <th>Mã đăng ký</th>
                                        <th>Người hiến máu</th>
                                        <th>Số điện thoại</th>
                                        <th>Sự kiện</th>
                                        <th>Ngày đăng ký</th>
                                        <th>Thời gian check-in</th>
                                        <th>Trạng thái</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var reg in Model)
                                    {
                                        <tr class="pending-row" 
                                            data-name="@(reg.FullName?.ToLower() ?? "")"
                                            data-event="@(reg.EventName?.ToLower() ?? "")"
                                            data-checkin="@(reg.CheckInTime?.ToString("yyyy-MM-dd HH:mm") ?? "")"
                                            data-registration="@reg.RegistrationDate.ToString("yyyy-MM-dd")">
                                            <td>
                                                <span class="badge bg-primary">@reg.RegistrationCode</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="bg-warning rounded me-2 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                        <i class="fas fa-user text-white"></i>
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@reg.FullName</h6>
                                                        <small class="text-muted">@reg.UserEmail</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="text-primary fw-bold">@reg.PhoneNumber</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@reg.EventName</span>
                                                <br>
                                                <small class="text-muted">@reg.EventDate?.ToString("dd/MM/yyyy")</small>
                                            </td>
                                            <td>
                                                <span class="text-muted">@reg.RegistrationDate.ToString("dd/MM/yyyy")</span>
                                            </td>
                                            <td>
                                                @if (reg.CheckInTime.HasValue)
                                                {
                                                    <span class="text-success fw-bold">
                                                        <i class="fas fa-clock me-1"></i>
                                                        @reg.CheckInTime.Value.ToString("HH:mm")
                                                    </span>
                                                    <br>
                                                    <small class="text-muted">@reg.CheckInTime.Value.ToString("dd/MM/yyyy")</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Chưa check-in</span>
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    var statusDisplayName = EnumMapper.GetDisplayName<EnumMapper.RegistrationStatus>(reg.Status);
                                                    
                                                    var badgeClass = reg.Status switch
                                                    {
                                                        EnumMapper.RegistrationStatus.CheckedIn => "bg-warning", // Chờ sàng lọc
                                                        EnumMapper.RegistrationStatus.Ineligible => "bg-danger", // Không đạt sàng lọc
                                                        EnumMapper.RegistrationStatus.Registered => "bg-primary",
                                                        EnumMapper.RegistrationStatus.Confirmed => "bg-info",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @badgeClass">@statusDisplayName</span>
                                                @if (reg.Status == EnumMapper.RegistrationStatus.CheckedIn)
                                                {
                                                    <br><small class="text-muted">Chờ sàng lọc sức khỏe</small>
                                                }
                                                else if (reg.Status == EnumMapper.RegistrationStatus.Ineligible)
                                                {
                                                    <br><small class="text-danger">Không đạt sàng lọc</small>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Create" asp-route-registrationId="@reg.RegistrationId" 
                                                       class="btn btn-sm btn-warning" title="Tạo sàng lọc">
                                                        <i class="fas fa-stethoscope me-1"></i>Sàng lọc
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/sweetalert-helper.js" asp-append-version="true"></script>
    <script>
        $(document).ready(function () {
            var successMsg = '@TempData["SuccessMessage"]';
            var errorMsg = '@TempData["ErrorMessage"]';
            
            if (successMsg) {
                showSuccess('Thành công');
            }
            if (errorMsg) {
                showError('Lỗi');
            }

            // Sorting functionality
            const sortBySelect = document.getElementById('sortBy');
            const pendingRows = document.querySelectorAll('.pending-row');
            const tbody = document.querySelector('tbody');

            function applySort() {
                const sortBy = sortBySelect.value;
                
                // Convert NodeList to Array for sorting
                let rows = Array.from(pendingRows);
                
                // Sort rows
                rows.sort((a, b) => {
                    switch (sortBy) {
                        case 'name-asc':
                            return a.dataset.name.localeCompare(b.dataset.name);
                        case 'name-desc':
                            return b.dataset.name.localeCompare(a.dataset.name);
                        case 'event-asc':
                            return (a.dataset.event || '').localeCompare(b.dataset.event || '');
                        case 'event-desc':
                            return (b.dataset.event || '').localeCompare(a.dataset.event || '');
                        case 'checkin-newest':
                            return b.dataset.checkin.localeCompare(a.dataset.checkin);
                        case 'checkin-oldest':
                            return a.dataset.checkin.localeCompare(b.dataset.checkin);
                        case 'registration-newest':
                            return b.dataset.registration.localeCompare(a.dataset.registration);
                        case 'registration-oldest':
                            return a.dataset.registration.localeCompare(b.dataset.registration);
                        default:
                            return 0;
                    }
                });
                
                // Reorder rows in DOM
                rows.forEach(row => tbody.appendChild(row));
            }

            // Event listeners
            if (sortBySelect) {
                sortBySelect.addEventListener('change', applySort);
            }
        });
    </script>
} 